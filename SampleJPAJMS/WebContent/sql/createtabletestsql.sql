CREATE TABLE POLICY_DETAILS(POLICY_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
POLICY_NAME VARCHAR(100)
);

CREATE TABLE PARTY_DETAILS(PARTY_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
PARTY_NAME VARCHAR(100),
POLICY_ID INT,
CONSTRAINT fk_policy  FOREIGN KEY (POLICY_ID) REFERENCES POLICY_DETAILS (POLICY_ID)
);

CREATE TABLE VEHICLE_DETAILS(VEHICLE_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
VEHICLE_NAME VARCHAR(100),
POLICY_ID INT,
CONSTRAINT fk_policy1 FOREIGN KEY (POLICY_ID) REFERENCES POLICY_DETAILS (POLICY_ID)
);



CREATE TABLE ADDRESS_DETAILS(ADDRESS_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
CITY VARCHAR(75),
STATE VARCHAR(75),
VEHICLE_ID INT,
CONSTRAINT fk_address FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLE_DETAILS (VEHICLE_ID)
);





select * from ADDRESS_DETAILS;
select * from VEHICLE_DETAILS;
select * from POLICY_DETAILS;
select * from PARTY_DETAILS;



drop table  PARTY_DETAILS;
drop table  ADDRESS_DETAILS;
drop table  VEHICLE_DETAILS;
drop table  POLICY_DETAILS;


CREATE TABLE POLICY(POLICY_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
POLICY_NAME VARCHAR(100)
);

CREATE TABLE PARTY(PARTY_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
PARTY_NAME VARCHAR(100)
);

 CREATE TABLE POLICY_PARTY(
 POLICY_ID INT,
 PARTY_ID INT, 
 PRIMARY KEY (POLICY_ID, PARTY_ID),
 CONSTRAINT fk_policy_multi FOREIGN KEY (POLICY_ID) REFERENCES POLICY (POLICY_ID),
CONSTRAINT fk_party_multi FOREIGN KEY (PARTY_ID) REFERENCES PARTY (PARTY_ID)
);


drop table POLICY_PARTY;
drop table POLICY;
drop table PARTY;

delete from POLICY;
delete from PARTY;

select * from POLICY;
select * from PARTY;
select * from POLICY_PARTY;





CREATE TABLE EMPLOYEE(EMPLOYEE_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
EMPLOYEE_NAME VARCHAR(100)
);

CREATE TABLE PROJECTS(PROJECT_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
PROJECT_NAME VARCHAR(100)
);

CREATE TABLE EMP_PROJECTS( 
EMPLOYEE_ID INT,
PROJECT_NAME INT,
CREATED_DATE DATE,
ACTIVE boolean,
PRIMARY KEY (EMPLOYEE_ID, PROJECT_ID),
 CONSTRAINT fk_emp FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID),
CONSTRAINT fk_project FOREIGN KEY (PROJECT_ID) REFERENCES PROJECTS (PROJECT_ID)
);

